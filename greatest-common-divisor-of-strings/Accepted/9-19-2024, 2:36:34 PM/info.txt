{"id":1395757114,"question_id":1146,"lang":"java","lang_name":"Java","time":"3 months, 2 weeks","timestamp":1726770994,"status":10,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/1395757114/","is_pending":"Not Pending","title":"Greatest Common Divisor of Strings","memory":"45.5 MB","code":"class Solution {\n    public String gcdOfStrings(String str1, String str2) {\n        String gcd=\"\";\n        int gcdnum = gcd(str1.length(), str2.length());\n        int len= Math.max(str1.length(), str2.length());\n        String test1 = str1.concat(str2);\n        String test2= str2.concat(str1);\n        if (!(test1.equals(test2))){\n            return \"\";\n        }\n        for (int i =0; i<len; i++){\n            if(str1.length()>i & str2.length()>i){\n                if (str1.charAt(i)==str2.charAt(i)){\n                    gcd+=str1.charAt(i);\n                }else{\n                    return gcd;\n                }\n            }\n        }\n        return gcd.substring(0,gcdnum);\n    }\n     private int gcd(int a, int b) {\n        // Base case: if b is 0, then a is the GCD (as GCD(a, 0) = a)\n        // Recursive step: GCD(a, b) = GCD(b, a mod b)\n        return b == 0 ? a : gcd(b, a % b);\n}\n}","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"greatest-common-divisor-of-strings","has_notes":false,"flag_type":1}